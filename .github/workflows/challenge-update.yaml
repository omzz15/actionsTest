name: Challenge Update
on:
  pull_request:
    types: [closed]
jobs:
  Update-GCP:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v4.1.7
      - run: |
          branch=${{github.head_ref}}
          resourceName="${branch//'/'/-}"
          echo "resourceName=$resourceName" >> $GITHUB_ENV
      - name: Check for Dockerfile
        id: check_dockerfile
        uses: andstor/file-existence-action@v3.0.0
        with:
          files: "challenges/${{ github.head_ref }}/Dockerfile"
      - name: Check for Static Folder
        id: check_static
        uses: andstor/file-existence-action@v3.0.0
        with:
          files: "challenges/${{ github.head_ref }}/static" 

      # - name: Build and Upload Challenge
      #   if: steps.check_dockerfile.outputs.files_exists == 'true'
      #   uses: piotr-krusinski/action-google-artifact-registry@v1.0
      #   with:
      #     # Google project ID of your project where Artifact Registry is created
      #     google_project_id: ${{ secrets.project_id }}
      #     # Google Artifact Registry region
      #     google_artifact_registry_region: ""
      #     # Google Artifact Registry hostname
      #     google_artifact_registry_hostname: ${{ secrets.registry_hostname }}
      #     # Google Artifact Registry repository name
      #     google_artifact_registry_name: ${{ secrets.registry_name }}
      #     # Base64 version of Google Cloud Platform service key to access Artifact Registry
      #     service_account_key: ${{ secrets.ar_push_sa_account_key }}
      #     # Path to dockerfile
      #     dockerfile: "challenges/${{github.head_ref}}/Dockerfile"
      #     # Name of created image
      #     image_name: ${{github.head_ref}}

      - name: Authenticate with GCP
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.workload_identity_provider_id }}
          project_id:  ${{ secrets.project_id }}
      - name: Docker Auth
        if: steps.check_dockerfile.outputs.files_exists == 'true'
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: ${{ steps.auth.outputs.access_token }}
          registry: ${{ secrets.registry_hostname }}
      - name: Build and Push Container
        if: steps.check_dockerfile.outputs.files_exists == 'true'
        run: |-
          docker build -t "${{ secrets.registry_hostname }}/${{ secrets.project_id }}/${{ secrets.registry_name }}/${{github.head_ref}}:${{ github.sha }}" "challenges/${{github.head_ref}}"
          docker push "${{ secrets.registry_hostname }}/${{ secrets.project_id }}/${{ secrets.registry_name }}/${{github.head_ref}}:${{ github.sha }}"
      - name: Update Cloud Run
        if: steps.check_dockerfile.outputs.files_exists == 'true'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: '${{ env.resourceName }}'
          image: "gcr.io/${{ secrets.registry_hostname }}/${{ secrets.project_id }}/${{ secrets.registry_name }}/${{ github.head_ref }}:${{ github.sha }}"
      - name: Upload Static Files
        if: steps.check_static.outputs.files_exists == 'true'
        uses: google-github-actions/upload-cloud-storage@v2
        with:
          path: 'challenges/${{github.head_ref}}/static'
          destination: '${{secrets.static_assets_bucket_name}}/challenges/${{github.head_ref}}/static' #TODO check if this is correct
      # - name: Update CTFd
        